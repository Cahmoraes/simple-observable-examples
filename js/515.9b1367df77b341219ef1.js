(self.webpackChunkrevisao_10_02_2021=self.webpackChunkrevisao_10_02_2021||[]).push([[515,41],{515:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>u});var i=t(575),s=t.n(i),o=t(913),a=t.n(o),r=t(898),l=t(41),c=t.n(l),u=function(){function n(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.getElementById("root");s()(this,n),this._root=t,this._$obs_1=r.Z.observable(0),this._$computedInicial=r.Z.computed((function(){return e._$obs_1.getInitialValue()}),[this._$obs_1]),this._$computedPrev=r.Z.computed((function(){return e._$obs_1.prevValue()}),[this._$obs_1]),this._button_1=null,this._inicialValue=null,this._prevValue=null,this._config={title:"Observable",button_1:"button_1"}}return a()(n,[{key:"render",value:function(){this._root.insertAdjacentHTML("beforeend",c()(this._config))}},{key:"getElements",value:function(){this._button_1=document.getElementById("button_1"),this._prevValue=document.getElementById("prevValue"),this._inicialValue=document.getElementById("inicialValue")}},{key:"addEventListener",value:function(){var n=this;this._button_1.addEventListener("click",(function(){n._$obs_1(n._$obs_1()+1)}))}},{key:"subscribeObservable",value:function(){var n=this;this._$obs_1.subscribe((function(e){n._button_1.textContent="Valor atual: (".concat(e,")")})),this._$computedInicial.subscribe((function(e){n._inicialValue.textContent="Valor inicial: (".concat(e,")")})),this._$computedPrev.subscribe((function(e){n._prevValue.textContent="Valor anterior: (".concat(e,")")}))}},{key:"init",value:function(){return this.render(),this.getElements(),this.addEventListener(),this.subscribeObservable(),this}}]),n}()},41:n=>{function e(){return`<h2 class="subtitle">${this.title}</h2>\n<div id="observable">\n  <div class="container">\n    <div class="grid-12">\n      <section class="row">\n        <div class="grid-12 description">\n          <h3>Sintaxe</h3>\n          <div class="code">\n            const $observable = so.observable(param [,function])\n          </div>\n          <p>Cria um observable.</p>\n          <h3>Parâmetros</h3>\n          <p>\n            param: String, Number, Object, null, Function.<br>\n            Valor inicial do observable.\n          </p>\n          <h3>Métodos</h3>\n          <p>\n            prevValue() => retorna o valor anterior observable. <br>\n            getInitialValue() => retorna o valor inicial do observable.\n          </p>\n\n          <div class="code">\n            const $observable = so.observable(1)<br>\n            $observable(3) <br>\n            $observable(5) <br>\n            console.log($observable.prevValue()) // 3\n            console.log($observable.getInitialValue()) // 1\n          </div>\n        </div>\n      </section>\n      <section class="row examples">\n        <div class="grid-12">\n          <button id="${this.button_1}"></button>\n        </div>\n        <div class="grid-12 MT10">\n          <div class="row">\n            <div class="grid-6">\n              <p id="inicialValue"></p>\n            </div>\n            <div class="grid-6">\n              <p id="prevValue"></p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</div>`}n.exports=function(n){return e.call(n,n)}}}]);