(self.webpackChunkrevisao_10_02_2021=self.webpackChunkrevisao_10_02_2021||[]).push([[41],{41:n=>{function e(){return`<h2 class="subtitle">${this.title}</h2>\n<div id="observable">\n  <div class="container">\n    <div class="grid-12">\n      <section class="row">\n        <div class="grid-12 description">\n          <h3>Sintaxe</h3>\n          <div class="code">\n            const $observable = so.observable(param [,function])\n          </div>\n          <p>Cria um observable.</p>\n          <h3>Parâmetros</h3>\n          <p>\n            param: String, Number, Object, null, Function.<br>\n            Valor inicial do observable.\n          </p>\n          <h3>Métodos</h3>\n          <p>\n            prevValue() => retorna o valor anterior observable. <br>\n            getInitialValue() => retorna o valor inicial do observable.\n          </p>\n\n          <div class="code">\n            const $observable = so.observable(1)<br>\n            $observable(3) <br>\n            $observable(5) <br>\n            console.log($observable.prevValue()) // 3\n            console.log($observable.getInitialValue()) // 1\n          </div>\n        </div>\n      </section>\n      <section class="row examples">\n        <div class="grid-12">\n          <button id="${this.button_1}"></button>\n        </div>\n        <div class="grid-12 MT10">\n          <div class="row">\n            <div class="grid-6">\n              <p id="inicialValue"></p>\n            </div>\n            <div class="grid-6">\n              <p id="prevValue"></p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</div>`}n.exports=function(n){return e.call(n,n)}}}]);