(self.webpackChunkrevisao_10_02_2021=self.webpackChunkrevisao_10_02_2021||[]).push([[79],{79:n=>{function e(){return`<div class="content">\n  <h2 class="subtitle">${this.title}</h2>\n  <div id="computedObservbale">\n    <div class="container-fluid">\n      <div class="grid-12">\n        <section class="row">\n          <div class="grid-12 description">\n            <h3>Sintaxe</h3>\n            <pre class="code">\n              const $computed = so.computedObservable(function,[...obervable])\n            </pre>\n            <p>Cria um observable que retorna um valor computado.</p>\n            <p>Cada obeservable alterado no array de dependências, atualizará o valor do obervable computado.</p>\n            <h3>Params</h3>\n            <p>\n              fuction => Função que será executada toda vez que alguma dependência atualizar.<br>\n              observable[] => Array de observables.\n            </p>\n          </div>\n        </section>\n        <div class="form-group">\n          <label for="input_1">${this.label_1}:</label>\n          <input type="text" id="input_1" name="input_1">\n        </div>\n        <div class="form-group">\n          <label for="input_2">${this.label_2}:</label>\n          <input type="text" id="input_2" name="input_2">\n        </div>\n      </div>\n      <div class="grid-12">\n        <span>${this.label_3}:</span>\n        <p id="computed-value"></p>\n      </div>\n    </div>\n  </div>\n</div>`}n.exports=function(n){return e.call(n,n)}}}]);