(self.webpackChunkrevisao_10_02_2021=self.webpackChunkrevisao_10_02_2021||[]).push([[458,302],{458:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c});var a=n(575),s=n.n(a),o=n(913),i=n.n(o),l=n(898),r=n(302),u=n.n(r),d="input_1",p="output_1",_="output_2",c=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.getElementById("root");s()(this,e),this._root=t,this._input_1=null,this._label_1="Dados de entrada",this._label_2="Dados de saída",this._label_3="prevValue:",this._label_4="newValue:",this._output_1=null,this._output_2=null,this._$obs_1=null,this._config={title:"Middleware",input_1:d,label_1:this._label_1,label_2:this._label_2,label_3:this._label_3,label_4:this._label_4,output_1:p,output_2:_}}return i()(e,[{key:"createObservable",value:function(){var e=this;this._$obs_1=l.Z.observable("",(function(t,n,a){console.log({prevValue:t,newValue:n}),e._output_1.textContent=t,e._output_2.textContent=n,a()}))}},{key:"getElements",value:function(){this._input_1=this._root.querySelector("#".concat(this._config.input_1)),this._output_1=this._root.querySelector("#".concat(this._config.output_1)),this._output_2=this._root.querySelector("#".concat(this._config.output_2)),console.log(this._input_1,this._output_1,this._output_2)}},{key:"addEventListenerInputs",value:function(){var e=this;this._input_1.addEventListener("input",(function(t){var n=t.target.value;e._$obs_1(n)}))}},{key:"render",value:function(){this._root.insertAdjacentHTML("beforeend",u()(this._config))}},{key:"init",value:function(){return this.render(),this.getElements(),this.createObservable(),this.addEventListenerInputs(),this}}]),e}()},302:e=>{function t(){return`<div class="content">\n  <h2 class="subtitle">${this.title}</h2>\n  <article id="middleware">\n    <div class="container-fluid">\n      <div class="grid-12">\n        <section class="row">\n          <div class="grid-12 description">\n            <h3>Sintaxe</h3>\n            <pre class="code">\n              function middleware(prevValue, newValue, next) {\n                <span class="tab_1">console.log(prevValue) // 1</span>\n                <span class="tab_1">console.log(newValue) // 2 </span>\n                <span class="tab_1">console.log(newValue()) // 2 </span>\n              }\n              <span>const $obs = so.obervable(1, middleware)</span>\n              <span>$obs(2)</span>\n            </pre>\n            <p>Funções middleware interceptam o observable quando ele sofre uma mudança. Com isso é possível realizar um side-effect durante a atualização do observable, além de interceptar, transformar e alterar o valor do observable.</p>\n            <h3>Parâmetros</h3>\n            <p><strong>prevValue:</strong> Valor anterior do observable.</p>\n            <p><strong>newValue:</strong> Novo valor passado para o observable via parâmetro: $obs('param')</p>\n            <p><strong>next:</strong> Função que ao ser executada, atualizará o valor do observable para o novo valor e retornará o novo valor atualizado. Se nada for passado para ela: next(), apenas atualizará o valor do observable com o newValue. Se for passado algum parâmtro, atualizará o valor do observable com o valor do parâmetro: next(3).</p>\n          </div>\n        </section>\n        <section class="row">\n          <div class="grid-12">\n            <div class="form-group">\n              <label for="input_1">${this.label_1}:</label>\n              <input type="text" id="${this.input_1}" name="${this.input_1}">\n            </div>\n            <div class="form-group">\n              <p>${this.label_2}:</p>\n              <div class="row">\n                <div class="grid-6">\n                  <span>${this.label_3}</span>\n                  <div class="row">\n                    <p class="grid-6" id="${this.output_1}"></p>\n                  </div>\n                </div>\n                <div class="grid-6">\n                  <span>${this.label_4}</span>\n                  <div class="row">\n                    <p class="grid-6" id="${this.output_2}"></p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  </article>\n</div>`}e.exports=function(e){return t.call(e,e)}}}]);